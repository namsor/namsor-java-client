/*
 * Namsor
 * <h2>NamSor SDK infers Gender and Origin from international names</h2>  <p>NamSor specialized data mining software recognizes the <strong>gender</strong>, the <strong>linguistic or cultural origin of personal names</strong> in any alphabet / language, with fine grain and high accuracy.</p>  <p>Visit <a href=\"http://namsor.com\">NamSor.com</a> to learn more.</p> 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.namsor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.namsor.model.FullNameInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Model for FullNameList
 */
@ApiModel(description = "Model for FullNameList")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-28T14:22:58.421+02:00")
public class FullNameListInput {
  /**
   * Gets or Sets nameFormatTip
   */
  @JsonAdapter(NameFormatTipEnum.Adapter.class)
  public enum NameFormatTipEnum {
    FNLN("ORDER_FNLN"),
    
    LNFN("ORDER_LNFN"),
    
    FNLN_OR_LNFN("ORDER_FNLN_OR_LNFN"),
    
    FNLN_OR_LNFN_ALLSAME("ORDER_FNLN_OR_LNFN_ALLSAME");

    private String value;

    NameFormatTipEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NameFormatTipEnum fromValue(String text) {
      for (NameFormatTipEnum b : NameFormatTipEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<NameFormatTipEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NameFormatTipEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NameFormatTipEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return NameFormatTipEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("nameFormatTip")
  private NameFormatTipEnum nameFormatTip = null;

  @SerializedName("names")
  private List<FullNameInput> names = new ArrayList<FullNameInput>();

  public FullNameListInput nameFormatTip(NameFormatTipEnum nameFormatTip) {
    this.nameFormatTip = nameFormatTip;
    return this;
  }

   /**
   * Get nameFormatTip
   * @return nameFormatTip
  **/
  @ApiModelProperty(required = true, value = "")
  public NameFormatTipEnum getNameFormatTip() {
    return nameFormatTip;
  }

  public void setNameFormatTip(NameFormatTipEnum nameFormatTip) {
    this.nameFormatTip = nameFormatTip;
  }

  public FullNameListInput names(List<FullNameInput> names) {
    this.names = names;
    return this;
  }

  public FullNameListInput addNamesItem(FullNameInput namesItem) {
    this.names.add(namesItem);
    return this;
  }

   /**
   * Get names
   * @return names
  **/
  @ApiModelProperty(required = true, value = "")
  public List<FullNameInput> getNames() {
    return names;
  }

  public void setNames(List<FullNameInput> names) {
    this.names = names;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullNameListInput fullNameListInput = (FullNameListInput) o;
    return Objects.equals(this.nameFormatTip, fullNameListInput.nameFormatTip) &&
        Objects.equals(this.names, fullNameListInput.names);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nameFormatTip, names);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullNameListInput {\n");
    
    sb.append("    nameFormatTip: ").append(toIndentedString(nameFormatTip)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

